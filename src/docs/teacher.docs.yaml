paths:
  /teacher:
    post:
      security:
        - Authorization: []
      summary: "To register a teacher"
      description: "This API will register a teacher. It requires admin login token."
      tags:
      - "Teacher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                phone:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"
    put:
      security:
        - Authorization: []
      summary: "To update profile-details of teacher"
      description: "This API will udpate profile-details of a teacher. It requires class teacher login token."
      tags:
      - "Teacher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                phone:
                  type: string
                dob:
                  type: string
                bloodGroup:
                  type: string
                gender:
                  type: string
                university:
                  type: string
                degree:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/login:
    post:
      summary: "To login a teacher"
      description: "This API will login a teacher."
      tags:
      - "Teacher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/all:
    get:
      security:
        - Authorization: []
      summary: "To get all teachers"
      description: "This API will allow admin to get all teachers. It requires admin login token."
      tags:
      - "Teacher"
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/{teacherId}:
    delete:
      security:
        - Authorization: []
      summary: "To delete a teacher"
      description: "This API will allow admin to delete a teacher. It requires admin login token."
      tags:
      - "Teacher"
      parameters:
       - in: path
         name: teacherId
         required: true
         description: ID of the teacher
         schema:
            type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"
  
  /teacher/unassigned:
    get:
      security:
        - Authorization: []
      summary: "To get a unassigned teachers"
      description: "This API will allow admin to get a list of unassigned teachers. It requires admin login token."
      tags:
      - "Teacher"
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/auth:
    put:
      security:
        - Authorization: []
      summary: "To update auth-details of teacher"
      description: "This API will udpate auth-details of a teacher. It requires class teacher login token."
      tags:
      - "Teacher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/auth-info-update:
    put:
      security:
        - Authorization: []
      summary: "To update auth-details of teacher"
      description: "This API will udpate auth-details of a teacher. It requires class teacher login token."
      tags:
      - "Teacher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/admin/{teacherId}:
    put:
      security:
        - Authorization: []
      summary: "To update a teacher"
      description: "This API will allow admin to update a teacher. It requires admin login token."
      tags:
      - "Teacher"
      parameters:
       - in: path
         name: teacherId
         required: true
         description: ID of the teacher
         schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                phone:
                  type: string
                address:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"
  
  /teacher/password-change:
    put:
      security:
        - Authorization: []
      summary: "To update password of teacher"
      description: "This API will udpate password of a teacher. It requires teacher login token."
      tags:
      - "Teacher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: "password updated successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /teacher/photo-upload: 
    put:
      security:
        - Authorization: []    
      tags:
      - "Teacher"
      summary: "Upload photo of teacher"
      description: "This API will allow teacher to upload their photo."
      produces:
      - "application/json"
      requestBody:
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 photo:
                   type: string
      responses:
        200:
          description: "successful"
        422:
          description: "Unprocessable Entity"
        403:
          description: "Forbidden"
        500:
          description: "Internal Server Error"

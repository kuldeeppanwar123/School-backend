paths:
  /parent/login:
    post:
      summary: "To login a parent"
      description: "This API allow parent to login."
      tags:
      - "Parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"


  /parent/auth-update:
    put:
      security:
        - Authorization: []
      summary: "To update auth-details of parent"
      description: "This API will udpate auth-details of a parent. It requires parent login token."
      tags:
      - "Parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"


  /parent/profile-update:
    put:
      security:
        - Authorization: []
      summary: "To update profile-details of parent"
      description: "This API will udpate profile-details of a parent. It requires parent login token."
      tags:
      - "Parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

# fullName,age,gender,address,qualification,occupation
  /parent/profile-info-update:
    put:
      security:
        - Authorization: []
      summary: "To update profile-info of parent"
      description: "This API will udpate profile-details of a parent. It requires parent login token."
      tags:
      - "Parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                age:
                  type: string
                gender:
                  type: string
                address:
                  type: string
                qualification:
                  type: string
                occupation:
                  type: string
      responses:
        200:
          description: "parent updated successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

  /parent/password-change:
    put:
      security:
        - Authorization: []
      summary: "To update password of parent"
      description: "This API will udpate password of a parent. It requires parent login token."
      tags:
      - "Parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: "password updated successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"


  /parent/children:
    get:
      security:
        - Authorization: []
      summary: "To get children"
      description: "This API will get children of parent. It requires parent login token."
      tags:
      - "Parent"
    responses:
      '200':
        description: "Children retrieved successfully."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: "Children retrieved successfully."
      '400':
        description: "Invalid request due to missing or incorrect fields."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 400
                message:
                  type: string
                  example: "Invalid request. Please check your input."
      '401':
        description: "Unauthorized request. Parent not authenticated."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: "Unauthorized. Please log in again."
      '404':
        description: "No children found for the parent."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 404
                message:
                  type: string
                  example: "No children associated with this parent."
      '500':
        description: "Server error. Unexpected issue occurred."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 500
                message:
                  type: string
                  example: "An unexpected error occurred."



  /parent/get-info:
    get:
      security:
        - Authorization: []
      summary: "To get parent info"
      description: "This API will get parent. It requires parent login token."
      tags:
      - "Parent"
    responses:
      '200':
        description: "Parent information retrieved successfully."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                statusCode:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: "Parent information retrieved successfully."
      '400':
        description: "Invalid request due to missing or incorrect fields."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 400
                message:
                  type: string
                  example: "Invalid request. Please check your input."
      '401':
        description: "Unauthorized request. Parent not authenticated."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 401
                message:
                  type: string
                  example: "Unauthorized. Please log in again."
      '404':
        description: "Parent information not found."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 404
                message:
                  type: string
                  example: "Parent information not found."
      '500':
        description: "Server error. Unexpected issue occurred."
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                statusCode:
                  type: integer
                  example: 500
                message:
                  type: string
                  example: "An unexpected error occurred."


  /parent/holiday-events:
    post:
      security:
        - Authorization: []
      summary: "To get event-holidays"
      description: "This API will get holiday-events to parent. It requires parent login token."
      tags:
      - "Parent"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                month:
                  type: number
                  example: 12
                year:
                  type: string
                  example: 2024
      responses:
        200:
          description: "teacher registered successfully"
        400:
          description: "Unauthorized request"
        500:
          description: "Server error"

          
  # /teacher/admin-class-teacher/{teacherId}:
  #   put:
  #     security:
  #       - Authorization: []
  #     summary: "To update a teacher"
  #     description: "This API will allow admin to update a teacher. It requires admin login token."
  #     tags:
  #     - "Teacher"
  #     parameters:
  #      - in: path
  #        name: teacherId
  #        required: true
  #        description: ID of the teacher
  #        schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               firstname:
  #                 type: string
  #               lastname:
  #                 type: string
  #               phone:
  #                 type: string
  #     responses:
  #       200:
  #         description: "teacher registered successfully"
  #       400:
  #         description: "Unauthorized request"
  #       500:
  #         description: "Server error"

